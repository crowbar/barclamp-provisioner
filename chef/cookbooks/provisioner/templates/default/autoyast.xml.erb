<?xml version="1.0"?>
<!DOCTYPE profile>
<profile xmlns="http://www.suse.com/1.0/yast2ns" xmlns:config="http://www.suse.com/1.0/configns">
  <deploy_image>
    <image_installation config:type="boolean">false</image_installation>
  </deploy_image>
  <general>
    <ask-list config:type="list"/>
    <mode>
      <confirm config:type="boolean">false</confirm>
      <final_halt config:type="boolean">false</final_halt>
      <final_reboot config:type="boolean">true</final_reboot>
      <halt config:type="boolean">false</halt>
      <second_stage config:type="boolean">true</second_stage>
    </mode>
    <mouse>
      <id>none</id>
    </mouse>
    <proposals config:type="list"/>
    <signature-handling>
      <accept_file_without_checksum config:type="boolean">true</accept_file_without_checksum>
      <accept_non_trusted_gpg_key config:type="boolean">true</accept_non_trusted_gpg_key>
      <accept_unknown_gpg_key config:type="boolean">true</accept_unknown_gpg_key>
      <accept_unsigned_file config:type="boolean">true</accept_unsigned_file>
      <accept_verification_failed config:type="boolean">true</accept_verification_failed>
      <import_gpg_key config:type="boolean">true</import_gpg_key>
    </signature-handling>
    <storage/>
  </general>
  <users config:type="list">
      <user>
         <username>root</username>
         <user_password>root</user_password>
         <encrypted config:type="boolean">false</encrypted>
         <forename/>
         <surname/>
      </user>
  </users>
  <networking>
    <keep_install_network config:type="boolean">true</keep_install_network>
    <dns>
      <dhcp_hostname config:type="boolean">true</dhcp_hostname>
      <domain>crowbar.site</domain>
      <resolv_conf_policy>auto</resolv_conf_policy>
      <write_hostname config:type="boolean">false</write_hostname>
    </dns>
    <managed config:type="boolean">false</managed>
    <routing>
      <ip_forward config:type="boolean">false</ip_forward>
    </routing>
  </networking>
  <partitioning config:type="list">
    <drive>
      <device>/dev/<%= @boot_device || "sda" %></device>
      <initialize config:type="boolean">true</initialize>
      <partitions config:type="list"/>
      <type config:type="symbol">CT_DISK</type>
      <use>all</use>
    </drive>
  </partitioning>
  <scripts>
    <chroot-scripts config:type="list">
        <script>
            <chrooted config:type="boolean">false</chrooted>
            <debug config:type="boolean">true</debug>
            <filename>crowbar_post</filename>
            <source>
<![CDATA[
export PS4='${BASH_SOURCE}@${LINENO}(${FUNCNAME[0]}): '
HTTP_SERVER="<%= @admin_node_ip %>:<%= @web_port %>"
IP="<%= @admin_node_ip %>"
HOSTNAME=$(hostname)

key_re='crowbar\.install\.key=([^ ]+)'
if [[ $(cat /proc/cmdline) =~ $key_re ]]; then
export CROWBAR_KEY="${BASH_REMATCH[1]}"
echo "$CROWBAR_KEY" >/mnt/etc/crowbar.install.key
elif [[ -f /mnt/etc/crowbar.install.key ]]; then
export CROWBAR_KEY="$(cat /mnt/etc/crowbar.install.key)"
fi

post_state() {
local curlargs=(-o "/var/log/$1-$2.json" --connect-timeout 60 -s \
  -L -X POST --data-binary "{ \"name\": \"$1\", \"state\": \"$2\" }" \
  -H "Accept: application/json" -H "Content-Type: application/json" \
  --max-time 240)
[[ $CROWBAR_KEY ]] && curlargs+=(-u "$CROWBAR_KEY" --digest --anyauth)
curl "${curlargs[@]}" "http://$IP:3000/crowbar/crowbar/1.0/transition/default"
}

mkdir -p /mnt/root/.ssh
chmod 700 /mnt/root/.ssh
if ! curl -s -o /mnt/root/.ssh/authorized_keys.wget \
    http://$HTTP_SERVER/authorized_keys; then
    rm -f /mnt/root/.ssh/authorized_keys.wget
else
    chmod 644 /mnt/root/.ssh/authorized_keys
    cat /mnt/root/.ssh/authorized_keys.wget >> /mnt/root/.ssh/authorized_keys
    rm -f /mnt/root/.ssh/authorized_keys.wget
fi

post_state $HOSTNAME "installed"

# Wait for DHCP to update - this is mainly for virtual environments or really large deploys
sleep 30
sync
]]>
            </source>
        </script>
    </chroot-scripts>
    <init-scripts config:type="list">
      <script>
        <filename>crowbar_join</filename>
        <location><%=@crowbar_join%></location>
      </script>
    </init-scripts>
  </scripts>
  <software>
    <packages config:type="list">
      <package>autoyast2-installation</package>
    </packages>
    <patterns config:type="list">
      <pattern>Minimal</pattern>
      <pattern>base</pattern>
    </patterns>
  </software>
</profile>
